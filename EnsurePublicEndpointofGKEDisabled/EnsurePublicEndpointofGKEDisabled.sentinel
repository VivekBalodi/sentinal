import "tfplan/v2" as tfplan
import "strings"
import "types"

allComposerResources = filter tfplan.resource_changes as _, resource_changes {
	resource_changes.type is "google_composer_environment" and
		resource_changes.mode is "managed" and
		(resource_changes.change.actions contains "create" or
			resource_changes.change.actions is ["update"])
}

deny_ConfigBlockMissing = rule {
	all allComposerResources as _, rc {
		keys(rc.change.after) contains "config"
	}
}

deny_PrivEnvConfigBlockMissing = rule when deny_ConfigBlockMissing is true {
	all allComposerResources as _, rc {
		all rc.change.after.config as _, sp {
			keys(sp) contains "private_environment_config"
		}
	}
}

EnableComposerprivateIP_rule = rule when deny_PrivEnvConfigBlockMissing is true {
	all allComposerResources as _, rc {
		all rc.change.after.config as _, sp {
			all sp.private_environment_config as _, ac {
				ac contains "enable_private_endpoint" and
					ac.enable_private_endpoint is true
			}
		}
	}
}

v = strings.split(tfplan.terraform_version, ".")
version_major = int(v[1])
version_minor = int(v[2])

print ("Policy Validation Rule - Do not allow cloud composer without a private environment config defined and public endpoint of GKE disabled")

main = rule {
	deny_ConfigBlockMissing and
	deny_PrivEnvConfigBlockMissing and
	EnableComposerprivateIP_rule and
	version_major >= 13 and
	version_minor >= 0
}